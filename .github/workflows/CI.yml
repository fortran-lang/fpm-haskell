name: CI

on: 
  push:
  pull_request:
  release:
    types: [published]

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gcc_v: [9] # Version of GFortran we want to use.
        include:
        - os: ubuntu-latest
          STACK_CACHE: "/home/runner/.stack/"
          STACK_CACHE_VERSION: ""

        - os: macos-latest
          STACK_CACHE: |
           /Users/runner/.stack/snapshots
           /Users/runner/.stack/setup-exe-src
          STACK_CACHE_VERSION: "v2"

        - os: windows-latest
          STACK_CACHE: |
           C:\Users\runneradmin\AppData\Roaming\stack
           C:\Users\runneradmin\AppData\Local\Programs\stack
          STACK_CACHE_VERSION: "v2"

    env:
      FC: gfortran
      GCC_V: ${{ matrix.gcc_v }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v1

    - name: Install GFortran macOS
      if: contains(matrix.os, 'macos')
      run: |
          ln -s /usr/local/bin/gfortran-${GCC_V} /usr/local/bin/gfortran
          which gfortran-${GCC_V}
          which gfortran

    - name: Install GFortran Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_V} 100 \
        --slave /usr/bin/gfortran gfortran /usr/bin/gfortran-${GCC_V} \
        --slave /usr/bingcov gcov /usr/bin/gcov-${GCC_V}
          
    - name: Setup github actions cache
      id: cache
      uses: actions/cache@v2
      with:
        path: ${{matrix.STACK_CACHE}}
        key: ${{ runner.os }}-${{ steps.time.outputs.time }}${{matrix.STACK_CACHE_VERSION}}

    - name: Build Haskell fpm
      run: |
        cd bootstrap
        stack build
        stack install
        stack test